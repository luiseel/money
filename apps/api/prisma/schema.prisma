// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum TransactionType {
  INCOME
  EXPENSE
}

model User {
  id                    String                 @id @default(uuid())
  clerkUserId           String                 @unique @map("clerk_user_id")
  name                  String
  email                 String
  createdAt             DateTime               @default(now()) @map("created_at")
  updatedAt             DateTime               @updatedAt @map("updated_at")
  transactions          Transaction[]
  recurringTransactions RecurringTransaction[]

  @@map("users")
}

model Transaction {
  id        String          @id @default(uuid())
  type      TransactionType
  amount    Decimal         @db.Decimal(10, 2)
  title     String
  tags      Json?
  applied   Boolean         @default(false)
  createdAt DateTime        @default(now()) @map("created_at")
  userId    String          @map("user_id")
  user      User            @relation(fields: [userId], references: [id])

  @@map("transactions")
}

model RecurringTransaction {
  id        String          @id @default(uuid())
  type      TransactionType
  amount    Decimal         @db.Decimal(10, 2)
  title     String
  tags      Json
  autoApply Boolean         @default(false) @map("auto_apply")
  active    Boolean         @default(true)
  startDate DateTime        @map("start_date")
  endDate   DateTime?       @map("end_date")
  frequency String
  createdAt DateTime        @default(now()) @map("created_at")
  updatedAt DateTime        @updatedAt @map("updated_at")
  userId    String          @map("user_id")
  user      User            @relation(fields: [userId], references: [id])

  @@map("recurring_transactions")
}
